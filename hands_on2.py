# -*- coding: utf-8 -*-
"""Hands-On2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1-JKdKbDUgoJHMpZT03TvwfGHq8tMvcVr
"""

import numpy as np
import time
import matplotlib.pyplot as plt

def random_array(size):
    return np.random.randint(0, 10000, size).tolist()

def runtime(sort_function, sizes):
    times = []
    for size in sizes:
        array = random_array(size)
        start = time.time()
        sort_function(array)
        end = time.time()
        times.append(end - start)
    return times

# Insertion Sort
def insertion_sort(array):
    for i in range(1, len(array)):
        key = array[i]
        j = i - 1
        while j >= 0 and array[j] > key:
            array[j + 1] = array[j]
            j -= 1
        array[j + 1] = key

# Bubble Sort
def bubble(array):
    n = len(array)
    for i in range(n):
        for j in range(0, n-i-1):
            if array[j] > array[j+1]:
                array[j], array[j+1] = array[j+1], array[j]

# Selection Sort
def selection(array):
    for i in range(len(array)):
        min_idx = i
        for j in range(i+1, len(array)):
            if array[j] < array[min_idx]:
                min_idx = j
        array[i], array[min_idx] = array[min_idx], array[i]

sizes = [5, 10, 50, 100, 500, 1000]
insertion_times = runtime(insertion_sort, sizes)
bubble_times = runtime(bubble, sizes)
selection_times = runtime(selection, sizes)

plt.figure(figsize=(15, 8))
plt.plot(sizes, insertion_times, label='Insertion Sort', marker='o')
plt.plot(sizes, bubble_times, label='Bubble Sort', marker='o')
plt.plot(sizes, selection_times, label='Selection Sort', marker='o')
plt.yscale('log')
plt.xlabel('Input Size (n)')
plt.ylabel('Time (seconds)')
plt.title('Run Time of Sorting Algorithms')
plt.legend()
plt.grid(True)
plt.show()

